{"version":3,"file":"201.0f333e3d51378dacbc59.js","mappings":"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","sources":["webpack://react-build/./node_modules/reactstrap/esm/Table.js","webpack://react-build/./src/widgets/EventList/ui/EventList.tsx","webpack://react-build/./src/widgets/EventList/ui/EventList.module.scss?93f7","webpack://react-build/./src/widgets/EventList/ui/EventListContainer.tsx","webpack://react-build/./src/pages/event/ListPage/ui/EventListPage.tsx"],"sourcesContent":["var _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Adds border to all sides of table */\n  bordered: PropTypes.bool,\n  /** Removes all borders */\n  borderless: PropTypes.bool,\n  /** Adds custom class name to component */\n  className: PropTypes.string,\n  /**  */\n  cssModule: PropTypes.object,\n  /** Makes the table dark */\n  dark: PropTypes.bool,\n  /** Enables a hover state on the rows within `<tbody>` */\n  hover: PropTypes.bool,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]),\n  /** Responsive tables allow tables to be scrolled horizontally with ease */\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  responsiveTag: tagPropType,\n  /** Make tables more compact by cutting cell padding in half when setting size as sm. */\n  size: PropTypes.string,\n  /** Adds zebra-striping to any table row within the `<tbody>` */\n  striped: PropTypes.bool,\n  /** Add custom tag to the component */\n  tag: tagPropType\n};\nfunction Table(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    size = props.size,\n    bordered = props.bordered,\n    borderless = props.borderless,\n    striped = props.striped,\n    dark = props.dark,\n    hover = props.hover,\n    responsive = props.responsive,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'table' : _props$tag,\n    _props$responsiveTag = props.responsiveTag,\n    ResponsiveTag = _props$responsiveTag === void 0 ? 'div' : _props$responsiveTag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\".concat(responsive), cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n  return table;\n}\nTable.propTypes = propTypes;\nexport default Table;","import { FC } from \"react\";\r\nimport { EventTask } from \"@/entities/EventTask/types/event-task-type\";\r\nimport * as classes from './EventList.module.scss'\r\nimport {\r\n    Table,\r\n} from \"reactstrap\";\r\n\r\ninterface EventListProps {\r\n    tasks: Array<EventTask>\r\n    setResultMenuStatus: (\r\n        status: 'result' | 'noresult' | 'expired' | 'cancel',\r\n        task: EventTask\r\n    ) => void\r\n}\r\n\r\n\r\nconst EventList: FC<EventListProps> = ({\r\n    tasks,\r\n    setResultMenuStatus\r\n}) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={`table-responsive p-4 ${classes.calling__page__wrapper}`}>\r\n            {/* <h4 className=\"card-title\">Запланированные дела по Компании</h4>\r\n                        <p className=\"card-title-desc\">Не завершенные задачи</p> */}\r\n\r\n            <div className=\"table-responsive\">\r\n                <Table className={`align-middle mb-0`} >\r\n\r\n                    <thead>\r\n                        <tr  >\r\n                            <th >#</th>\r\n                            <th>Что надо сделать</th>\r\n                            <th>Тип</th>\r\n                            <th>Крайний срок</th>\r\n                            <th>Текущий статус</th>\r\n                            {/* <th>Комментарий</th> */}\r\n                            <th>Действие</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            tasks && tasks.length && tasks.map((task, i) => (\r\n                                <tr key={`table-row-${i}`}>\r\n                                    <th scope=\"row\">{i + 1}</th>\r\n                                    <td>{task.name}</td>\r\n                                    <td>{task.type}</td>\r\n                                    <td>{task.deadline}</td>\r\n                                    <td>\r\n                                        {\r\n                                            task.isExpired === 'no'\r\n                                                ? <span className={classes.statusSuccess} >\r\n                                                    Запланирован\r\n                                                </span>\r\n\r\n\r\n                                                // <span\r\n                                                //     className={style.badge__success}\r\n                                                // >\r\n                                                //     {'Запланирован'}\r\n                                                // </span>\r\n                                                : task.isExpired === 'yes'\r\n                                                    ? <span className={`${classes.statusWarning}`} >\r\n                                                        Просрочен\r\n                                                    </span>\r\n                                                    : <span className={`${classes.statusExpired}`} >\r\n\r\n                                                        {'Скоро'}\r\n                                                    </span>\r\n                                        }\r\n\r\n                                    </td>\r\n                                    <td >\r\n                                        <div className={classes.actionsCell}>\r\n                                            <button type=\"button\" className={\r\n                                                `btn btn-sm  mr-5 ${classes.badge__star}`\r\n                                            }\r\n                                                onClick={() => setResultMenuStatus('result', task)}\r\n                                            >Результативный</button>\r\n                                            <button type=\"button\" className={\r\n                                                `btn btn-sm ms-2 ${classes.badge__error}`\r\n                                            }\r\n                                                onClick={() => setResultMenuStatus('noresult', task)}\r\n                                            >Не очень</button>\r\n                                            <button type=\"button\" className={\r\n                                                `btn btn-sm ms-2 ${classes.badge__tolong}`\r\n                                            }\r\n                                                onClick={() => setResultMenuStatus('expired', task)}\r\n                                            >Перенос</button>\r\n                                            <button type=\"button\" className={\r\n                                                `btn btn-sm ms-2 ${classes.badge__cancel}`\r\n                                            }\r\n                                                onClick={() => setResultMenuStatus('cancel', task)}\r\n                                            >Не считать</button>\r\n                                        </div>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default EventList","// extracted by mini-css-extract-plugin\nvar _1 = \"vokrV\";\nvar _2 = \"K9tf5\";\nvar _3 = \"Tg9aN\";\nvar _4 = \"ej40p\";\nvar _5 = \"YMdyG\";\nvar _6 = \"hs6K7\";\nvar _7 = \"yoX5u\";\nvar _8 = \"edm7S\";\nvar _9 = \"qyX_C\";\nvar _a = \"wMSwk\";\nvar _b = \"eVwK9\";\nvar _c = \"w2Sue\";\nvar _d = \"SiOCZ\";\nvar _e = \"JZdKY\";\nvar _f = \"aolFY\";\nvar _10 = \"zRf5T\";\nvar _11 = \"Msrfp\";\nvar _12 = \"n0INM\";\nvar _13 = \"fV_S8\";\nvar _14 = \"v0Krc\";\nvar _15 = \"VkEpu\";\nvar _16 = \"E1YgD\";\nvar _17 = \"nA6BC\";\nvar _18 = \"rm6en\";\nvar _19 = \"FwDoM\";\nvar _1a = \"FurTg\";\nvar _1b = \"ufZeH\";\nvar _1c = \"qbWEc\";\nvar _1d = \"uwQra\";\nexport { _1 as \"actionsCell\", _2 as \"badge\", _3 as \"badge__blue\", _4 as \"badge__cancel\", _5 as \"badge__errActive\", _6 as \"badge__error\", _7 as \"badge__result\", _8 as \"badge__star\", _9 as \"badge__starActive\", _a as \"badge__success\", _b as \"badge__successActive\", _c as \"badge__tolong\", _d as \"badge__warning\", _e as \"badge__warningActive\", _f as \"button--color\", _10 as \"button--white\", _11 as \"calling__page__wrapper\", _12 as \"statusExpired\", _13 as \"statusSuccess\", _14 as \"statusWarning\", _15 as \"text\", _16 as \"text--base\", _17 as \"text--button\", _18 as \"text--large\", _19 as \"text__big\", _1a as \"text__bold\", _1b as \"text__link\", _1c as \"text__small\", _1d as \"text__small__bold\" }\n","import { useAppDispatch, useAppSelector } from \"@/app/lib/hooks/redux\"\r\nimport { eventActions } from \"@/processes/event\"\r\nimport { EVENT_CURRENT_PAGE } from \"@/processes/event/types/event-types\"\r\nimport { EventTask } from \"@/entities/EventTask/types/event-task-type\"\r\nimport { FC, useEffect } from \"react\"\r\nimport { eventTaskActions, initialEventTasks } from \"@/entities/EventTask\"\r\nimport EventList from \"./EventList\"\r\nimport { EventItemResultType, eventItemActions } from \"@/widgets/EventItem/model/EventItemSlice\"\r\nimport { getResultMenu } from \"@/widgets/EventItem\"\r\n\r\n\r\n\r\nexport const EventListContainer: FC<{}> = () => {\r\n    const tasks = useAppSelector(state => state.eventTask.tasks)\r\n    const isFetched = useAppSelector(state => state.eventTask.isFetched)\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        !isFetched && dispatch(\r\n            initialEventTasks()\r\n        )\r\n\r\n    }, [])\r\n\r\n    const setResultMenuStatus = (\r\n        status: EventItemResultType,\r\n        task: EventTask\r\n    ) => {\r\n        dispatch(\r\n            getResultMenu(\r\n                status,\r\n                task\r\n\r\n            )\r\n        )\r\n        // dispatch(\r\n        //     eventTaskActions\r\n        //         .setCurrentTask(\r\n        //             { task }\r\n        //         ))\r\n\r\n        // dispatch(\r\n        //     eventItemActions\r\n        //         .setEventItemMenuStatus(\r\n        //             {\r\n        //                 status: true,\r\n        //                 menuType: status\r\n\r\n        //             }\r\n\r\n        //         )\r\n        // )\r\n\r\n        // dispatch(\r\n        //     eventActions\r\n        //         .setCurrentPage(\r\n        //             {\r\n        //                 page: EVENT_CURRENT_PAGE.ITEM\r\n        //             }\r\n\r\n        //         )\r\n        // )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return <EventList\r\n\r\n        tasks={tasks}\r\n        setResultMenuStatus={setResultMenuStatus}\r\n\r\n    />\r\n\r\n}\r\n\r\n\r\n\r\n","import { FC } from \"react\";\r\nimport Page from \"@/shared/ui/Page/Page\";\r\nimport { EventListContainer } from \"@/widgets/EventList\";\r\n\r\n\r\nconst EventListPage: FC = () => {\r\n\r\n    return (\r\n        <Page color=\"white\">\r\n            <EventListContainer />\r\n        </Page>\r\n\r\n    );\r\n};\r\nexport default EventListPage"],"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","propTypes","bordered","borderless","className","cssModule","dark","hover","innerRef","responsive","responsiveTag","size","striped","tag","Table","props","_props$tag","Tag","_props$responsiveTag","ResponsiveTag","attributes","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_objectWithoutProperties","classes","table","ref","responsiveClassName","concat","_ref","tasks","setResultMenuStatus","React","createElement","map","task","scope","name","type","deadline","isExpired","onClick","EventListContainer","useAppSelector","state","eventTask","isFetched","dispatch","useAppDispatch","useEffect","initialEventTasks","EventList","status","getResultMenu","Page","color"],"sourceRoot":""}