{"version":3,"file":"94.d8ff86b62354b2e1f6db.js","mappings":"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","sources":["webpack://april-event-app/./src/assets/img/product-row/icon-done.svg","webpack://april-event-app/./src/shared/ui/Badge/ABadge.module.scss?4ee1","webpack://april-event-app/./src/shared/ui/Badge/ABadge.tsx","webpack://april-event-app/./src/entities/EventSale/EventSalePresentation/EventSalePresentationList/EventSalePresentationList.tsx","webpack://april-event-app/./src/entities/EventSale/EventSalePresentation/EventSalePresentationList/EventSalePresentationList.module.scss?0e25","webpack://april-event-app/./src/entities/EventSale/EventSalePresentation/EventSalePresentationItem/ui/EventSalePresentationItem.tsx","webpack://april-event-app/./src/entities/EventSale/EventSalePresentation/EventSalePresentationItem/ui/ItemLabel.tsx","webpack://april-event-app/./src/entities/EventSale/EventSalePresentation/EventSalePresentationItem/ui/EventSalePresentationItem.module.scss?8d3e","webpack://april-event-app/./src/entities/EventSale/ui/EventSale.tsx"],"sourcesContent":["var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgIconDone = function SvgIconDone(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"\\\\xD0\\\\x98\\\\xD0\\\\xBA\\\\xD0\\\\xBE\\\\xD0\\\\xBD\\\\xD0\\\\xBA\\\\xD0\\\\xB0 \\\\xD0\\\\xB4\\\\xD0\\\\xBB\\\\xD1\\\\x8F \\\\xD1\\\\x8D\\\\xD0\\\\xBA\\\\xD1\\\\x81\\\\xD0\\\\xBF\\\\xD0\\\\xBE\\\\xD1\\\\x80\\\\xD1\\\\x82\\\\xD0\\\\xB0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Pre-Icon\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 1.5C5.30514 1.5 1.5 5.30514 1.5 10C1.5 14.6949 5.30514 18.5 10 18.5C14.6949 18.5 18.5 14.6949 18.5 10C18.5 5.30514 14.6949 1.5 10 1.5ZM0.5 10C0.5 4.75286 4.75286 0.5 10 0.5C15.2471 0.5 19.5 4.75286 19.5 10C19.5 15.2471 15.2471 19.5 10 19.5C4.75286 19.5 0.5 15.2471 0.5 10ZM14.4786 7.02145C14.6738 7.21671 14.6738 7.53329 14.4786 7.72855L8.85355 13.3536C8.75672 13.4504 8.62441 13.5033 8.48751 13.4998C8.35061 13.4964 8.22111 13.437 8.12923 13.3355L5.75423 10.7105C5.56896 10.5057 5.58477 10.1895 5.78954 10.0042C5.99431 9.81896 6.3105 9.83477 6.49577 10.0395L8.51812 12.2748L13.7714 7.02145C13.9667 6.82618 14.2833 6.82618 14.4786 7.02145Z\",\n    fill: \"currentColor\"\n  }))));\n};\nexport default SvgIconDone;","// extracted by mini-css-extract-plugin\nvar _1 = \"Af_Af__abadge--Af\";\nvar _2 = \"l7_l7__abadge--april--l7\";\nvar _3 = \"Y2_Y2__abadge--blue--Y2\";\nvar _4 = \"ha_ha__abadge--danger--ha\";\nvar _5 = \"Lc_Lc__abadge--dark--Lc\";\nvar _6 = \"Yx_Yx__abadge--fiolet--Yx\";\nvar _7 = \"oI_oI__abadge--green--oI\";\nvar _8 = \"CV_CV__abadge--light--CV\";\nvar _9 = \"JQ_JQ__abadge--orange--JQ\";\nvar _a = \"Jx_Jx__abadge--success--Jx\";\nvar _b = \"Yq_Yq__abadge--warning--Yq\";\nvar _c = \"r3_r3__active--r3\";\nvar _d = \"zK_zK__big--zK\";\nvar _e = \"Ru_Ru__button--color--Ru\";\nvar _f = \"qM_qM__button--white--qM\";\nvar _10 = \"if_if__iconeDone--if\";\nvar _11 = \"L7_L7__inactive--L7\";\nvar _12 = \"xI_xI__medium--xI\";\nvar _13 = \"wv_wv__small--wv\";\nvar _14 = \"fp_fp__text--fp\";\nvar _15 = \"iB_iB__text--base--iB\";\nvar _16 = \"Sv_Sv__text--button--Sv\";\nvar _17 = \"ll_ll__text--large--ll\";\nvar _18 = \"dB_dB__text__big--dB\";\nvar _19 = \"iP_iP__text__bold--iP\";\nvar _1a = \"z2_z2__text__link--z2\";\nvar _1b = \"jn_jn__text__small--jn\";\nvar _1c = \"mg_mg__text__small__bold--mg\";\nvar _1d = \"Hw_Hw__title--Hw\";\nvar _1e = \"bv_bv__withIcone--bv\";\nexport { _1 as \"abadge\", _2 as \"abadge--april\", _3 as \"abadge--blue\", _4 as \"abadge--danger\", _5 as \"abadge--dark\", _6 as \"abadge--fiolet\", _7 as \"abadge--green\", _8 as \"abadge--light\", _9 as \"abadge--orange\", _a as \"abadge--success\", _b as \"abadge--warning\", _c as \"active\", _d as \"big\", _e as \"button--color\", _f as \"button--white\", _10 as \"iconeDone\", _11 as \"inactive\", _12 as \"medium\", _13 as \"small\", _14 as \"text\", _15 as \"text--base\", _16 as \"text--button\", _17 as \"text--large\", _18 as \"text__big\", _19 as \"text__bold\", _1a as \"text__link\", _1b as \"text__small\", _1c as \"text__small__bold\", _1d as \"title\", _1e as \"withIcone\" }\n","import { FC } from \"react\";\r\nimport * as classes from './ABadge.module.scss'\r\nimport IconeDoneSVG from '../../../assets/img/product-row/icon-done.svg'\r\n\r\ninterface ABadgeProps {\r\n    title: string\r\n    isActive?: boolean\r\n    color?: 'green' | 'blue' | 'fiolet' | 'orange' | 'light' | 'dark' | 'april'\r\n    | 'warning' | 'danger' | 'success'\r\n    size?: 'small' | 'medium' | 'big'\r\n    clickHendler?: (clickHendlerData: any | null) => void\r\n    clickHendlerData?: { [key: string]: any }\r\n    isIconeDone?: boolean\r\n\r\n\r\n}\r\n\r\n\r\nexport const ABadge: FC<ABadgeProps> = ({\r\n    title,\r\n    isActive,\r\n    color = \"april\",\r\n    size = \"medium\",\r\n    clickHendler,\r\n    clickHendlerData,\r\n    isIconeDone\r\n}) => {\r\n\r\n    const badgeClass = `${classes.abadge} ${classes[`abadge--${color}`]} \r\n    ${isActive ? classes.active : classes.inactive}\r\n       ${isIconeDone ? classes.withIcone : ''} \r\n       ${classes[size]}\r\n    \r\n    `;\r\n\r\n\r\n\r\n    return <div className={badgeClass} onClick={\r\n        () => clickHendler && clickHendler(clickHendlerData || null)\r\n    }>\r\n        <p className={classes.title}>\r\n            {title}\r\n        </p>\r\n        {/* <div className={classes.iconeDone}> */}\r\n        {isIconeDone && <IconeDoneSVG\r\n            width={'30px'}\r\n            height={'30px'}\r\n        // color={'color'} \r\n        />}\r\n        {/* </div> */}\r\n    </div >\r\n}","import { FC } from 'react';\r\nimport * as classes from './EventSalePresentationList.module.scss'\r\nimport { ABadge } from '@/shared/ui/Badge/ABadge';\r\nimport { useAppDispatch, useAppSelector } from '@/app/lib/hooks/redux';\r\nimport { BXDeal } from '@/app/types/bitrix/bitrix-type';\r\nimport { eventSaleActions } from '../../model/EventSaleSlice';\r\n\r\nconst EventSalePresentationList: FC = ({ }) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const showSalePresentation = (dealId: number) => {  //переход к показу элемента\r\n        // dispatch(\r\n        //     eventSaleActions.setCurrentPresItem({\r\n        //         dealId,\r\n        //         type: 'show'\r\n        //     })\r\n        // )\r\n\r\n    }\r\n    const setCurrentSalePresentation = (dealId: number) => { //связать презентацию с текущей продажей\r\n\r\n        dispatch(\r\n            dispatch(\r\n                eventSaleActions.setCurrentPresItem({\r\n                    dealId,\r\n                    type: 'current'\r\n                })\r\n            )\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const sale = useAppSelector(state => state.eventSale)\r\n    let presntationDeals = sale.presDeals.items;\r\n    const currentPresntationDeal = sale.presDeals.current;\r\n    \r\n\r\n    return (\r\n        <div className={classes.sale_presentations}>\r\n            {presntationDeals && presntationDeals.length &&\r\n                presntationDeals.map((deal: BXDeal, i: number) => {\r\n                    const fullTitle = deal.TITLE\r\n                    let title = fullTitle\r\n                    // if (fullTitle.startsWith(\"Презентация\")) {\r\n                    //     title = fullTitle.replace(/^Презентация\\s+/, '');\r\n                    // }\r\n                \r\n                    const isActive = currentPresntationDeal && currentPresntationDeal.ID === deal.ID\r\n\r\n                    const setPresentationSale = () => setCurrentSalePresentation(deal.ID)\r\n                    return (\r\n\r\n                        <div className={classes.itemWrapper}>\r\n                            <p className={classes.itemTitle}\r\n                                onClick={() => showSalePresentation(deal.ID)}\r\n\r\n                            >{title}</p>\r\n\r\n\r\n                            <ABadge\r\n                                title={isActive ? '' : 'Связать'}\r\n                                color={'april'}\r\n                                size=\"small\"\r\n                                isActive={isActive}\r\n                                isIconeDone={isActive}\r\n                                clickHendler={setPresentationSale}\r\n\r\n                            />\r\n                            {/* <div className={classes.actionsWrapper}>\r\n                                    <ABadge\r\n                                        title={isActive ? '' : 'Связать'}\r\n                                        color={'april'}\r\n                                        size=\"small\"\r\n                                        isActive={isActive}\r\n                                        isIconeDone={isActive}\r\n                                        clickHendler={getPresentationSale}\r\n\r\n                                    />\r\n                                    <ABadge\r\n                                        title={'Подробности'}\r\n                                        color={'dark'}\r\n                                        size=\"small\"\r\n\r\n                                    />\r\n                                </div> */}\r\n\r\n                        </div>)\r\n\r\n                })\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventSalePresentationList;","// extracted by mini-css-extract-plugin\nvar _1 = \"Fz_Fz__actionsWrapper--Fz\";\nvar _2 = \"ME_ME__button--color--ME\";\nvar _3 = \"rG_rG__button--white--rG\";\nvar _4 = \"DZ_DZ__gradient--DZ\";\nvar _5 = \"ad_ad__itemTitle--ad\";\nvar _6 = \"Mi_Mi__itemWrapper--Mi\";\nvar _7 = \"rh_rh__sale_badge--rh\";\nvar _8 = \"ab_ab__sale_badge__active--ab\";\nvar _9 = \"Ka_Ka__sale_presentations--Ka\";\nvar _a = \"Ko_Ko__text--Ko\";\nvar _b = \"bX_bX__text--base--bX\";\nvar _c = \"Ut_Ut__text--button--Ut\";\nvar _d = \"ng_ng__text--large--ng\";\nvar _e = \"kc_kc__text__big--kc\";\nvar _f = \"aL_aL__text__bold--aL\";\nvar _10 = \"e0_e0__text__link--e0\";\nvar _11 = \"Sx_Sx__text__small--Sx\";\nvar _12 = \"G2_G2__text__small__bold--G2\";\nexport { _1 as \"actionsWrapper\", _2 as \"button--color\", _3 as \"button--white\", _4 as \"gradient\", _5 as \"itemTitle\", _6 as \"itemWrapper\", _7 as \"sale_badge\", _8 as \"sale_badge__active\", _9 as \"sale_presentations\", _a as \"text\", _b as \"text--base\", _c as \"text--button\", _d as \"text--large\", _e as \"text__big\", _f as \"text__bold\", _10 as \"text__link\", _11 as \"text__small\", _12 as \"text__small__bold\" }\n","import ADate from '@/shared/ui/Inputs/Date/ADate';\r\nimport AInput from '@/shared/ui/Inputs/Input/AInput';\r\nimport AText from '@/shared/ui/Inputs/Text/AText';\r\nimport { FC } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst EventSalePresentationItem: FC = ({ }) => {\r\n    return (<>\r\n\r\n        {/* @ts-ignore */}\r\n        <AText\r\n            label={'Опишите кратко что было'}\r\n            height={7}\r\n        // handleChange={handleChange}\r\n        // nameForHandler={EV_REPORT_PROP.COMMENT}\r\n        />\r\n        {/* @ts-ignore */}\r\n        <AInput\r\n            label={'Название - что нужно сделать'}\r\n        // errorMessage={nameErrorMessge}\r\n        // nameForHandler={EV_PLAN_PROP.NAME}\r\n        // handleChange={planPropChange}\r\n        // handleOnFocus={handleOnNameFocus}\r\n        />\r\n        {/* @ts-ignore */}\r\n        <ADate\r\n            label={'Дата и время звонка'}\r\n            value={'date'}\r\n        // errorMessage={null}\r\n        // nameForHandler={EV_PLAN_PROP.DATE}\r\n        // handleChange={planPropChange}\r\n        // handleOnFocus={false}\r\n        />\r\n\r\n    </>\r\n    );\r\n}\r\n\r\nexport default EventSalePresentationItem;","import { FC } from 'react';\r\nimport * as classes from './EventSalePresentationItem.module.scss'\r\nimport { ABadge } from '@/shared/ui/Badge/ABadge';\r\nimport { useAppDispatch } from '@/app/lib/hooks/redux';\r\nimport { eventSaleActions } from '@/entities/EventSale/model/EventSaleSlice';\r\n\r\n\r\n\r\n\r\n\r\nconst EventSalePresentationItemLabel: FC = ({ }) => {\r\n\r\n\r\n    const dispatch = useAppDispatch()\r\n    const back = () => {\r\n\r\n        dispatch(\r\n            eventSaleActions\r\n                .setCurrentPresItem({ dealId: null, type: 'show' })\r\n        )\r\n\r\n    }\r\n\r\n\r\n    return (<div className={classes.itemActionsWrapper}>\r\n        <ABadge\r\n            title={'связать'}\r\n            color={'april'}\r\n            size=\"small\"\r\n        // isIconeDone={true}\r\n\r\n        />\r\n\r\n        <ABadge\r\n            title={'назад'}\r\n            color={'orange'}\r\n            size=\"small\"\r\n            isActive\r\n            clickHendler={back}\r\n\r\n        />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default EventSalePresentationItemLabel;","// extracted by mini-css-extract-plugin\nvar _1 = \"QU_QU__button--color--QU\";\nvar _2 = \"LZ_LZ__button--white--LZ\";\nvar _3 = \"t8_t8__gradient--t8\";\nvar _4 = \"qm_qm__itemActionsWrapper--qm\";\nvar _5 = \"_G__G__text--_G\";\nvar _6 = \"Rm_Rm__text--base--Rm\";\nvar _7 = \"iB_iB__text--button--iB\";\nvar _8 = \"qV_qV__text--large--qV\";\nvar _9 = \"Or_Or__text__big--Or\";\nvar _a = \"HG_HG__text__bold--HG\";\nvar _b = \"tS_tS__text__link--tS\";\nvar _c = \"Fh_Fh__text__small--Fh\";\nvar _d = \"O9_O9__text__small__bold--O9\";\nexport { _1 as \"button--color\", _2 as \"button--white\", _3 as \"gradient\", _4 as \"itemActionsWrapper\", _5 as \"text\", _6 as \"text--base\", _7 as \"text--button\", _8 as \"text--large\", _9 as \"text__big\", _a as \"text__bold\", _b as \"text__link\", _c as \"text__small\", _d as \"text__small__bold\" }\n","import { FC } from \"react\"\r\nimport EVCard from \"@/shared/ui/Cards/EventEntityCard/EventCard\"\r\nimport { ABadge } from \"@/shared/ui/Badge/ABadge\"\r\nimport EventSalePresentationList from \"../EventSalePresentation/EventSalePresentationList/EventSalePresentationList\"\r\nimport { useAppDispatch, useAppSelector } from \"@/app/lib/hooks/redux\"\r\nimport EventSalePresentationItem from \"../EventSalePresentation/EventSalePresentationItem/ui/EventSalePresentationItem\"\r\nimport EventSalePresentationItemLabel from \"../EventSalePresentation/EventSalePresentationItem/ui/ItemLabel\"\r\nimport { eventSaleActions } from \"../model/EventSaleSlice\"\r\n\r\n\r\n\r\nconst EventSale: FC = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const sale = useAppSelector(state => state.eventSale)\r\n    const isCurrentShow = sale.presDeals.show || false\r\n\r\n    const clear = () => {\r\n        dispatch(\r\n            eventSaleActions\r\n                .setCurrentPresItem({ dealId: null, type: 'current' })\r\n        )\r\n    }\r\n\r\n    const actionComponent = !isCurrentShow ? <ABadge\r\n        title={'Очистить'}\r\n        color={'warning'}\r\n        size=\"small\"\r\n        clickHendler={clear}\r\n\r\n    />\r\n        : <EventSalePresentationItemLabel />\r\n\r\n       \r\n\r\n\r\n\r\n\r\n\r\n    return <EVCard\r\n        title={!isCurrentShow ? 'Связи Продажи' : 'Связать Продажу с презентацией'}\r\n        width={12} size=\"big\"\r\n        actionComponent={actionComponent}\r\n    >\r\n\r\n        <div\r\n\r\n            className=\"d-flex flex-column justify-content-start align-items-start p-0\">\r\n\r\n\r\n            {!isCurrentShow\r\n                ? <EventSalePresentationList />\r\n                : <EventSalePresentationItem />\r\n            }\r\n\r\n        </div>\r\n\r\n    </EVCard >\r\n\r\n}\r\n\r\nexport default EventSale"],"names":["_g","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","props","width","height","viewBox","fill","xmlns","id","fillRule","clipRule","d","_1","_2","_3","_4","_5","_6","_7","_8","_9","_a","_b","_c","_d","_e","_f","_10","_11","_12","_13","_14","_15","_16","_17","_18","_19","_1a","_1b","_1c","_1d","_1e","ABadge","_ref","title","isActive","_ref$color","color","_ref$size","size","clickHendler","clickHendlerData","isIconeDone","badgeClass","concat","classes","_jsxs","className","onClick","children","_jsx","IconeDoneSVG","_objectDestructuringEmpty","dispatch","useAppDispatch","sale","useAppSelector","state","eventSale","presntationDeals","presDeals","items","currentPresntationDeal","current","map","deal","i","TITLE","ID","dealId","eventSaleActions","setCurrentPresItem","type","_Fragment","AText","label","AInput","ADate","value","isCurrentShow","show","actionComponent","EventSalePresentationItemLabel","EVCard","EventSalePresentationItem","EventSalePresentationList"],"sourceRoot":""}