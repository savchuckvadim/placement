{"version":3,"file":"507.b9cd58a9062b009c02b9.js","mappings":"sMAwDA,QAtC+C,SAAHA,GAIlC,IAFFC,EAAcD,EAAdC,eAIaC,EAAAA,EA4BjB,OAzBQD,IAMCE,EAAAA,EAASC,OAEEC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KAefD,EAAAA,EAAAA,KAACH,EAAAA,EAAS,GAIlC,ECHA,EAhCgC,SAAHF,GAEvB,IADFO,EAASP,EAATO,UAGMC,IADQC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,CAAK,KAC5BD,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMF,MAAM,KAC7CP,GAAiBQ,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,IAAIA,GAAG,IAExDC,GADiBJ,EAAOK,QAAQC,OACpBT,EAAAA,EAAAA,KAACH,EAAAA,EAAS,KAsB1B,OAnBAa,EAAAA,EAAAA,YAAU,WACFP,EAAOK,SAAWL,EAAOK,QAAQC,QAChCP,IAEDK,GAAYP,EAAAA,EAAAA,KAACW,EAAY,CAACf,eAAgBA,IAElD,GAAG,CAACO,EAAQD,IAGPA,GAEGC,EAAOK,SAAWL,EAAOK,QAAQC,QAEjCF,GAAYP,EAAAA,EAAAA,KAACW,EAAY,CAACf,eAAgBA,KAM3CW,CACX,C","sources":["webpack://react-build/./src/processes/routes/ui/CurrentRoute/CurrentRoute.tsx","webpack://react-build/./src/processes/routes/ui/Router.tsx"],"sourcesContent":["import { FC, Suspense } from \"react\";\r\nimport { ROUTE } from \"../../types/router-type\";\r\nimport Preloader from \"@/shared/ui/Preloader/Preloader\";\r\nimport { APP_TYPE } from \"@/app/types/app/app-type\";\r\nimport { EventContainer } from \"@/processes/event\";\r\n\r\n\r\n\r\n\r\n\r\n// interface CurrentRouteProps {\r\n//     currentRoute: ROUTE\r\n// }\r\n\r\ninterface CurrentProccessProps {\r\n    currentProcess: APP_TYPE\r\n}\r\n\r\nconst CurrentRoute: FC<CurrentProccessProps> = (\r\n    {\r\n        currentProcess\r\n\r\n    }) => {\r\n\r\n    let component = <Preloader />\r\n\r\n\r\n    switch (currentProcess) {\r\n\r\n        // case ROUTE.KONSTRUCTOR:\r\n        //     component = <Suspense fallback={<Preloader />}> <App /></Suspense>\r\n        //     // component = <PostContainer />\r\n        //     break;\r\n        case APP_TYPE.EVENT:\r\n\r\n            component = <EventContainer />//<Report /> \r\n            break;\r\n            // case ROUTE.COMPLECT:\r\n\r\n            //     component = <Suspense fallback={<Preloader />}> <Complect /></Suspense>\r\n            //     break;\r\n            // case ROUTE.PRODUCTS:\r\n            //     component = <div style={{ minHeight: '100%', minWidth: '100%' }}>\r\n            //         <Suspense fallback={<Preloader />}>  <Price />  </Suspense>\r\n\r\n            //     </div >\r\n\r\n            // component = <PostContainer2 />\r\n            // break;\r\n        default:\r\n            component = <Preloader />\r\n    }\r\n    return component\r\n\r\n}\r\n\r\nexport default CurrentRoute\r\n\r\n\r\n\r\n\r\n// const CurrentRoute: FC<CurrentRouteProps> = (\r\n//     {\r\n//         currentRoute\r\n\r\n//     }) => {\r\n\r\n//     let component = <Preloader />\r\n\r\n\r\n//     switch (currentRoute) {\r\n\r\n//         // case ROUTE.KONSTRUCTOR:\r\n//         //     component = <Suspense fallback={<Preloader />}> <App /></Suspense>\r\n//         //     // component = <PostContainer />\r\n//         //     break;\r\n//         case ROUTE.CALLING:\r\n\r\n//             component = <EventListPage />//<Report />\r\n//             break;\r\n//             // case ROUTE.COMPLECT:\r\n\r\n//             //     component = <Suspense fallback={<Preloader />}> <Complect /></Suspense>\r\n//             //     break;\r\n//             // case ROUTE.PRODUCTS:\r\n//             //     component = <div style={{ minHeight: '100%', minWidth: '100%' }}>\r\n//             //         <Suspense fallback={<Preloader />}>  <Price />  </Suspense>\r\n\r\n//             //     </div >\r\n\r\n//             // component = <PostContainer2 />\r\n//             break;\r\n//         default:\r\n//             component = <Preloader />\r\n//     }\r\n//     return component\r\n\r\n// }\r\n\r\n// export default CurrentRoute","import { FC, useEffect } from \"react\";\r\nimport { useAppSelector } from \"@/app/lib/hooks/redux\";\r\nimport Preloader from \"@/shared/ui/Preloader/Preloader\";\r\nimport { RouterState } from \"../model/RouterSlice\";\r\nimport CurrentRoute from \"./CurrentRoute/CurrentRoute\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface RouterProps {\r\n    // router: RouterState\r\n    preloader: boolean\r\n    // initialized \r\n}\r\n\r\n\r\nconst Router: FC<RouterProps> = ({\r\n    preloader,\r\n}) => {\r\n    const state = useAppSelector(state => state)\r\n    const router = useAppSelector(state => state.router) as RouterState\r\n    const currentProcess = useAppSelector(state => state.app.app)\r\n    const currentRoute = router.current.route\r\n    let component = <Preloader />\r\n\r\n\r\n    useEffect(() => {\r\n        if (router.current && router.current.route &&\r\n            !preloader) {\r\n\r\n            component = <CurrentRoute currentProcess={currentProcess} />\r\n        }\r\n    }, [router, preloader])\r\n\r\n\r\n    if (!preloader) {\r\n\r\n        if (router.current && router.current.route) {\r\n\r\n            component = <CurrentRoute currentProcess={currentProcess} />\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return component\r\n}\r\n\r\nexport default Router"],"names":["_ref","currentProcess","Preloader","APP_TYPE","EVENT","_jsx","EventContainer","preloader","router","useAppSelector","state","app","component","current","route","useEffect","CurrentRoute"],"sourceRoot":""}